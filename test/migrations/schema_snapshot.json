{
  "Users": {
    "name": "users",
    "fields": {
      "id": {
        "type": "INTEGER",
        "autoIncrement": true,
        "primaryKey": true
      },
      "email": {
        "type": "VARCHAR",
        "maxLength": 255,
        "unique": true
      },
      "phone": {
        "type": "VARCHAR",
        "maxLength": 255,
        "nullable": true
      },
      "age": {
        "type": "INTEGER",
        "autoIncrement": false,
        "primaryKey": false,
        "nullable": true
      },
      "total_games_played": {
        "type": "INTEGER",
        "autoIncrement": false,
        "primaryKey": false,
        "default": 0
      },
      "level": {
        "type": "TEXT CHECK(value IN ('NOOB', 'INTERMEDIATE', 'EXPERT', 'KING', 'EMPEROR'))",
        "choices": [
          "NOOB",
          "INTERMEDIATE",
          "EXPERT",
          "KING",
          "EMPEROR"
        ],
        "default": "NOOB",
        "dialect": "sqlite"
      },
      "bonus_balance": {
        "type": "DECIMAL",
        "precision": 5,
        "scale": 2,
        "maxDigits": 5,
        "decimalPlaces": 2
      }
    },
    "relations": {
      "games": {
        "type": "hasMany",
        "model": "games",
        "foreignKey": "user_id"
      }
    },
    "triggers": {
      "afterInsert": {
        "timing": "AFTER",
        "event": "INSERT",
        "statements": [
          "UPDATE users SET bonus_balance = 10.00 WHERE id = NEW.id;",
          "INSERT INTO audit_logs (message, created_at) VALUES ( 'New user created: ' || NEW.id, CURRENT_TIMESTAMP );"
        ]
      },
      "afterUpdate": {
        "timing": "AFTER",
        "event": "UPDATE",
        "statements": [
          "INSERT INTO user_level_history ( user_id, old_level, new_level, changed_at ) VALUES ( NEW.id, OLD.level, NEW.level, CURRENT_TIMESTAMP ) WHERE OLD.level <> NEW.level;",
          "INSERT INTO audit_logs (message, created_at) VALUES ( 'Bonus changed, from ' || OLD.bonus_balance || ' to ' || NEW.bonus_balance, CURRENT_TIMESTAMP ) WHERE OLD.bonus_balance <> NEW.bonus_balance;"
        ]
      }
    },
    "meta": {
      "dbTable": "oldapp_users",
      "indexes": [
        {
          "fields": [
            "email"
          ],
          "unique": true,
          "name": "idx_users_email"
        }
      ]
    }
  }
}